---
- name: Create kubeadm Group
  group:
    name: "{{ application_users.k8s.group }}"
    gid:  "{{ application_users.k8s.gid }}"
    state: present
  become: yes

- name: Create kubeadm User
  user:
    name:             "{{ application_users.k8s.user }}"
    comment:          "{{ application_users.k8s.comment }}"
    group:            "{{ application_users.k8s.group }}"
    # groups:           "{{ application_users.k8s.groups }}"
    uid:              "{{ application_users.k8s.uid }}"
    shell:            "/bin/bash"
    generate_ssh_key: yes
    ssh_key_bits:     2048
    ssh_key_file:     .ssh/id_rsa
    ssh_key_comment:  "kube@{{ inventory_hostname }}"
    state:            present
    append:           yes
  become: yes

- name: Add groups to kubeadm User
  user:
    name:             "{{ application_users.k8s.user }}"
    groups:           "{{ item }}"
    state:            present
    append:           yes
  become:             yes
  ignore_errors:      yes
  with_items: 
      - "{{ application_users.k8s.groups }}"

- name: Collect public keys of kubeadm-users 
  shell: "cat /home/kube/.ssh/id_rsa.pub"
  changed_when: False
  become: yes
  register: ssh_public_key

- name: Set SSH-Key for default Admin User
  authorized_key:
    user:  "{{ application_users.k8s.user }}"
    key:   "{{ item.key }}"
    state: present
  become: yes
  with_items:
    - "{{ ssh_keys }}"
  when: item["user"] in kubernetes_ssh_keys
      
- name: Set SSH-Key for kubernetes-users
  authorized_key:
    user: "{{ item[1] }}"
    key: "{{ item[2] }}"
    state: present
  delegate_to: "{{ item[0] }}"
  ignore_errors: yes
  become: yes
  with_nested:
    - "{{groups['all_kubernetes']}}"
    - "{{ application_users.k8s.user }}"
    - "{{ ssh_public_key.stdout }}"
  when: 
    - item[0] in ansible_play_hosts
    - hostvars[item[0]].module_setup is defined